node {

   environment {
     PATH = "D:/Tools/cygwin64/bin:%PATH%"
   }
  
    stage 'checkout'
     git 'https://github.com/ramanurs/spring-framework-petclinic.git'
    
    stage ('build') {
      def mvn_version = 'M3'
	  bat "echo 'build project...'"
      //withEnv( ["PATH+MAVEN=${tool mvn_version}/bin"] ) {
        bat 'mvn clean install'
      //}
    }

    stage 'bake image'
	def project = new XmlSlurper().parseText(readFile('pom.xml'))
	def CURRENT_VERSION = project.version.text()
	//bat "CURRENT_VERSION=`mvn -s /etc/maven/settings.xml -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec`"
    echo "CURRENT_VERSION=$CURRENT_VERSION"
	withCredentials([usernamePassword(credentialsId: 'ramana_dockerhub', passwordVariable: 'dockerhub_pwd', usernameVariable: 'dockerhub_user')]) {
	    
		bat "docker login -u ${dockerhub_user} -p ${dockerhub_pwd}"
	    bat 'echo "logged in to docker hub.."'
		
		bat "docker build -t ramanurs/ramana1:1.0.${env.BUILD_NUMBER} ." 
		
        //def image = docker.build("ramanurs/ramana1:1.0",'.')
        bat 'echo "Build docker image.."'
		stage 'test image' 
		bat 'docker run -p 9988:8080 -d --name pet_${CURRENT_VERSION}_${env.BUILD_NUMBER} ramanurs/ramana1:1.0'
		git 'https://github.com/ramanurs/spring-framework-petclinic.git'
		bat 'mvn clean verify'
        
		
        
        stage('Results') {
         junit '**/target/surefire-reports/TEST-*.xml'
         archive 'target/*.jar'
        }	
       
        
        stage 'push image'
        //image.push()
		bat 'docker push ramanurs/ramana1:1.0'
    }
}
